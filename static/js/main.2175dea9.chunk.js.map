{"version":3,"sources":["redux/appReducer.js","components/SearchInput.jsx","components/SelectState.jsx","App.js","api/api.js","reportWebVitals.js","redux/store.js","index.js"],"names":["SET_DATA","initialState","data","pageSize","totalUsersCount","currentPage","appReducer","state","action","type","SearchInput","props","className","placeholder","onChange","e","onSearch","target","value","SelectState","stateArr","allValue","map","u","adress","iterArr","Set","sort","defaultValue","onSearchState","i","compose","connect","app","getDataThunk","dispatch","axios","then","response","useEffect","useState","searchValue","setSearchValue","searchState","setSearchState","user","setUser","sd","document","getElementsByClassName","sortTable","n","table","rows","switching","x","y","shouldSwitch","dir","switchcount","getElementById","getElementsByTagName","length","innerHTML","toLowerCase","parentNode","insertBefore","sortTablebyID","Number","setCurrentPage","id","onClick","slice","filter","firstName","console","log","indexOf","lastName","email","phone","description","streetAddress","city","zip","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","reducers","combineReducers","store","createStore","applyMiddleware","thunkMiddleware","window","ReactDOM","render"],"mappings":"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","file":"static/js/main.2175dea9.chunk.js","sourcesContent":["import { getData } from \"../api/api\";\r\n\r\nconst SET_DATA = \"SET_DATA\";\r\n\r\nlet initialState = {\r\n  data: [],\r\n  pageSize: 20,\r\n  totalUsersCount: null,\r\n  currentPage: 1,\r\n};\r\n\r\nconst appReducer = (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case SET_DATA: {\r\n      return {\r\n        ...state,\r\n        data: [...action.data],\r\n      };\r\n    }\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport const setData = (data) => ({\r\n  type: SET_DATA,\r\n  data,\r\n});\r\n\r\nexport const getDataThunk = () => (dispatch) => {\r\n  getData().then((response) => {\r\n    dispatch(setData(response));\r\n  });\r\n};\r\n\r\nexport default appReducer;\r\n","import React from \"react\";\r\nimport \"../App.css\";\r\n\r\nlet SearchInput = (props) => {\r\n  return (\r\n    <input\r\n      className=\"search\"\r\n      placeholder=\"Search by name\"\r\n      type=\"text\"\r\n      onChange={(e) => props.onSearch(e.target.value)}\r\n      value={props.value}\r\n    />\r\n  );\r\n};\r\n\r\nexport default SearchInput;\r\n","import React from \"react\";\r\nimport \"../App.css\";\r\n\r\nlet SelectState = (props) => {\r\n  let stateArr = props.allValue.map((u) => u.adress.state);\r\n  let iterArr = [...new Set(stateArr)].sort();\r\n\r\n  return (\r\n    <select\r\n      className=\"searchState\"\r\n      defaultValue={\"DEFAULT\"}\r\n      onChange={(e) => props.onSearchState(e.target.value)}\r\n    >\r\n      <option value=\"DEFAULT\">Filter by state</option>\r\n      {iterArr.map((u, i) => {\r\n        return (\r\n          <option key={i} value={u}>\r\n            {u}\r\n          </option>\r\n        );\r\n      })}\r\n    </select>\r\n  );\r\n};\r\n\r\nexport default SelectState;\r\n","import \"./App.css\";\nimport { connect } from \"react-redux\";\nimport { compose } from \"redux\";\nimport { getDataThunk } from \"./redux/appReducer\";\nimport { useEffect, useState } from \"react\";\nimport SearchInput from \"./components/SearchInput\";\nimport SelectState from \"./components/SelectState\";\n\nconst App = (props) => {\n  useEffect(() => {\n    props.getDataThunk();\n    // eslint-disable-next-line\n  }, []);\n\n  const [searchValue, setSearchValue] = useState(\"\");\n\n  const filterNames = ({ firstName }) => {\n    console.log(firstName);\n    return firstName.toLowerCase().indexOf(searchValue.toLowerCase()) !== -1;\n  };\n\n  const [searchState, setSearchState] = useState(\"\");\n\n  const filterState = ({ adress }) => {\n    if (!searchState || searchState === \"DEFAULT\") return 1;\n    if (adress.state === searchState) return 1;\n  };\n\n  const [user, setUser] = useState();\n\n  let sd = document.getElementsByClassName(\"sortingDirection\");\n  function sortTable(n) {\n    let table,\n      rows,\n      switching,\n      i,\n      x,\n      y,\n      shouldSwitch,\n      dir,\n      switchcount = 0;\n    table = document.getElementById(\"myTable\");\n    switching = true;\n    dir = \"asc\";\n    while (switching) {\n      switching = false;\n      rows = table.getElementsByTagName(\"TR\");\n      for (i = 1; i < rows.length - 1; i++) {\n        shouldSwitch = false;\n        x = rows[i].getElementsByTagName(\"TD\")[n];\n        y = rows[i + 1].getElementsByTagName(\"TD\")[n];\n        if (dir === \"asc\") {\n          if (x.innerHTML.toLowerCase() > y.innerHTML.toLowerCase()) {\n            shouldSwitch = true;\n            sd[n].innerHTML = \"▲\";\n            break;\n          }\n        } else if (dir === \"desc\") {\n          if (x.innerHTML.toLowerCase() < y.innerHTML.toLowerCase()) {\n            shouldSwitch = true;\n            sd[n].innerHTML = \"▼\";\n            break;\n          }\n        }\n      }\n      if (shouldSwitch) {\n        rows[i].parentNode.insertBefore(rows[i + 1], rows[i]);\n        switching = true;\n        switchcount++;\n      } else {\n        if (switchcount === 0 && dir === \"asc\") {\n          dir = \"desc\";\n          switching = true;\n        }\n      }\n    }\n  }\n\n  function sortTablebyID(n) {\n    let table,\n      rows,\n      switching,\n      i,\n      x,\n      y,\n      shouldSwitch,\n      dir,\n      switchcount = 0;\n    table = document.getElementById(\"myTable\");\n    switching = true;\n    dir = \"asc\";\n    while (switching) {\n      switching = false;\n      rows = table.getElementsByTagName(\"TR\");\n\n      for (i = 1; i < rows.length - 1; i++) {\n        shouldSwitch = false;\n        x = rows[i].getElementsByTagName(\"TD\")[0];\n        y = rows[i + 1].getElementsByTagName(\"TD\")[0];\n        if (dir === \"asc\") {\n          if (Number(x.innerHTML) > Number(y.innerHTML)) {\n            shouldSwitch = true;\n            if (n === 0) sd[0].innerHTML = \"▲\";\n            else sd[4].innerHTML = \"▲\";\n            break;\n          }\n        } else if (dir === \"desc\") {\n          if (Number(x.innerHTML) < Number(y.innerHTML)) {\n            shouldSwitch = true;\n            if (n === 0) sd[0].innerHTML = \"▼\";\n            else sd[4].innerHTML = \"▼\";\n            break;\n          }\n        }\n      }\n      if (shouldSwitch) {\n        rows[i].parentNode.insertBefore(rows[i + 1], rows[i]);\n        switching = true;\n        switchcount++;\n      } else {\n        if (switchcount === 0 && dir === \"asc\") {\n          dir = \"desc\";\n          switching = true;\n        }\n      }\n    }\n  }\n  //pagination\n\n  const [currentPage, setCurrentPage] = useState(0);\n  let previousPage = () => {\n    if (currentPage !== 0) setCurrentPage(currentPage - 1);\n  };\n  let nextPage = () => {\n    if (currentPage + 1 < props.data.length) setCurrentPage(currentPage + 1);\n  };\n  //\n  return (\n    <div className=\"App\">\n      <div className=\"searchContainer\">\n        <SearchInput onSearch={setSearchValue} value={searchValue} />\n        <SelectState allValue={props.data} onSearchState={setSearchState} />\n      </div>\n      <table id=\"myTable\">\n        <thead>\n          <tr>\n            <th onClick={() => sortTablebyID(0)}>\n              id<span className=\"sortingDirection\"> •</span>\n            </th>\n            <th onClick={() => sortTable(1)}>\n              First name<span className=\"sortingDirection\"> •</span>\n            </th>\n            <th onClick={() => sortTable(2)}>\n              Last name<span className=\"sortingDirection\"> •</span>\n            </th>\n            <th onClick={() => sortTable(3)}>\n              Email<span className=\"sortingDirection\"> •</span>\n            </th>\n            <th onClick={() => sortTablebyID(4)}>\n              Phone<span className=\"sortingDirection\"> •</span>\n            </th>\n            <th onClick={() => sortTable(5)}>\n              State<span className=\"sortingDirection\"> •</span>\n            </th>\n          </tr>\n        </thead>\n        <tbody>\n          {props.data\n            .slice(currentPage * 20, (currentPage + 1) * 20)\n            .filter(filterNames)\n            .filter(filterState)\n            .map((u) => {\n              return (\n                <tr key={u.phone} onClick={() => setUser(u)}>\n                  <td>{u.id}</td>\n                  <td>{u.firstName}</td>\n                  <td>{u.lastName}</td>\n                  <td>{u.email}</td>\n                  <td>{u.phone}</td>\n                  <td>{u.adress.state}</td>\n                </tr>\n              );\n            })}\n        </tbody>\n      </table>\n      <button className=\"pageBtn\" onClick={previousPage}>\n        ❮\n      </button>\n      <button className=\"pageBtn\" onClick={nextPage}>\n        ❯\n      </button>\n      {user ? (\n        <div className=\"profileInfo\">\n          Profile info:\n          <div>\n            Select profile: {user.firstName} {user.lastName}\n          </div>\n          <div>Description: {user.description}</div>\n          <div>Address: {user.adress.streetAddress}</div>\n          <div>City: {user.adress.city}</div>\n          <div>State: {user.adress.state}</div>\n          <div>Index: {user.adress.zip}</div>\n        </div>\n      ) : (\n        <div></div>\n      )}\n    </div>\n  );\n};\n\nlet mapStateToProps = (state) => ({\n  data: state.app.data,\n});\n\nexport default compose(connect(mapStateToProps, { getDataThunk }))(App);\n","import * as axios from \"axios\";\r\n\r\nexport const getData = () => {\r\n  return axios\r\n    .get(\r\n      `https://itrex-react-lab-files.s3.eu-central-1.amazonaws.com/react-test-api.json`\r\n    )\r\n    .then((response) => response.data);\r\n};\r\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import { applyMiddleware, combineReducers, createStore } from \"redux\";\r\nimport thunkMiddleware from \"redux-thunk\";\r\nimport appReducer from \"./appReducer\";\r\n\r\nlet reducers = combineReducers({\r\n  app: appReducer,\r\n});\r\n\r\nlet store = createStore(reducers, applyMiddleware(thunkMiddleware));\r\n\r\nwindow.store = store;\r\n\r\nexport default store;\r\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\nimport { Provider } from \"react-redux\";\nimport store from \"./redux/store\";\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById(\"root\")\n);\n\nreportWebVitals();\n"],"sourceRoot":""}